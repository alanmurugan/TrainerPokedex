@page "/move/delete/{MoveId:int}"
@using TrainerPokedex.Shared.Models.Move
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient _http
@inject NavigationManager _navigation
@if (_message != null)
{
    <h2 class="text-danger">@_message</h2>
}
@if (Move != null)
{
    <h3>Delete @Move.Name</h3>
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>@Move.Name</span>
                <span class="text-muted">
                    <strong>Type: @Move.TypeName<br/>Base Strength: @Move.BaseStrength</strong>
                </span>
            </div>
            <div class="card-body">
                <h4 class="card-title">Description</h4>
                <p class="card-text">@Move.Description</p>
            </div>
            <div class="card-body">
                <h4 class="card-title">Teachable Pokemon</h4>
                <p class="card-text">
                    @foreach (var pokemon in Move.TeachablePokemon)
                    {
                        <a href=@($"pokemon/{pokemon.Id}")>@pokemon.Name</a>
                        <br/>
                    }
                </p>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/move") class="btn btn-outline-primary">Back to Index</a>
                <a href=@($"/Move/delete/{MoveId}") class="btn btn-outline-danger">Delete</a>
            </div>
        </div>
    </div>
}
else
{
    <p>
        <em>Loading...</em>
    </p>
}
@code {

    [Parameter]
    public int MoveId { get; set; } = new();
    private MoveDetail Move { get; set; }
    public string _message { get; set; }
   
    protected override async Task OnInitializedAsync()
    {
        Move = await _http.GetFromJsonAsync<MoveDetail>($"/api/move/{MoveId}");
    }
    
    private async void HandleClick()
    {
        var deleteRes = await _http.DeleteAsync($"/api/region/delete/{MoveId}");
        if (deleteRes.IsSuccessStatusCode)
        {
            _navigation.NavigateTo("/region");
        }
        else
        {
            _message = "Failed to delete region";
        }
    }
}